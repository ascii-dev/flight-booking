"""empty message

Revision ID: 09cb109bfdf2
Revises: 66034f09f704
Create Date: 2019-05-30 10:23:19.797489

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '09cb109bfdf2'
down_revision = '66034f09f704'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('airplanes',
                    sa.Column(
                        'id', sa.String(length=36), nullable=False),
                    sa.Column(
                        'created_at', sa.DateTime(), nullable=True),
                    sa.Column(
                        'updated_at', sa.DateTime(), nullable=True),
                    sa.Column(
                        'brand', sa.String(length=60), nullable=False),
                    sa.Column(
                        'model', sa.String(length=60), nullable=False),
                    sa.Column(
                        'capacity', sa.Integer(), nullable=False),
                    sa.PrimaryKeyConstraint(
                        'id', name=op.f('pk_airplanes')))
    op.create_table('flights',
                    sa.Column(
                        'id', sa.String(length=36), nullable=False),
                    sa.Column(
                        'created_at', sa.DateTime(), nullable=True),
                    sa.Column(
                        'updated_at', sa.DateTime(), nullable=True),
                    sa.Column(
                        'airplane_id', sa.String(), nullable=False),
                    sa.Column(
                        'flying_from', sa.String(length=400), nullable=False),
                    sa.Column(
                        'flying_to', sa.String(length=400), nullable=False),
                    sa.Column(
                        'departure', sa.DateTime(), nullable=False),
                    sa.Column(
                        'arrival', sa.DateTime(), nullable=False),
                    sa.Column(
                        'date', sa.Date(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['airplane_id'],
                        ['airplanes.id'],
                        name=op.f('flights_airplane_id_fkey')),
                    sa.PrimaryKeyConstraint(
                        'id', name=op.f('pk_flights')))
    op.create_table('tickets',
                    sa.Column(
                        'id', sa.String(length=36), nullable=False),
                    sa.Column(
                        'created_at', sa.DateTime(), nullable=True),
                    sa.Column(
                        'updated_at', sa.DateTime(), nullable=True),
                    sa.Column(
                        'user_id', sa.String(), nullable=False),
                    sa.Column(
                        'flight_id', sa.String(), nullable=False),
                    sa.Column(
                        'status', sa.Enum(
                            'pending', 'paid', name='ticketstatusenum'),
                        nullable=False),
                    sa.ForeignKeyConstraint(
                        ['flight_id'], ['flights.id'],
                        name=op.f('tickets_flight_id_fkey')),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['users.id'],
                        name=op.f('tickets_user_id_fkey')),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_tickets')))
    op.drop_table('flight')
    op.drop_table('airplane')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('airplane',
                    sa.Column(
                        'id',
                        sa.VARCHAR(length=36),
                        autoincrement=False,
                        nullable=False),
                    sa.Column(
                        'created_at',
                        postgresql.TIMESTAMP(),
                        autoincrement=False,
                        nullable=True),
                    sa.Column(
                        'updated_at',
                        postgresql.TIMESTAMP(),
                        autoincrement=False,
                        nullable=True),
                    sa.Column(
                        'brand',
                        sa.VARCHAR(length=60),
                        autoincrement=False,
                        nullable=False),
                    sa.Column(
                        'model',
                        sa.VARCHAR(length=60),
                        autoincrement=False,
                        nullable=False),
                    sa.Column(
                        'capacity',
                        sa.INTEGER(),
                        autoincrement=False,
                        nullable=False),
                    sa.PrimaryKeyConstraint(
                        'id', name='pk_airplane'),
                    postgresql_ignore_search_path=False)
    op.create_table('flight',
                    sa.Column(
                        'id',
                        sa.VARCHAR(length=36),
                        autoincrement=False,
                        nullable=False),
                    sa.Column('created_at',
                              postgresql.TIMESTAMP(),
                              autoincrement=False,
                              nullable=True),
                    sa.Column('updated_at',
                              postgresql.TIMESTAMP(),
                              autoincrement=False,
                              nullable=True),
                    sa.Column('airplane_id',
                              sa.VARCHAR(),
                              autoincrement=False,
                              nullable=False),
                    sa.Column('flying_from',
                              sa.VARCHAR(length=400),
                              autoincrement=False,
                              nullable=False),
                    sa.Column('flying_to',
                              sa.VARCHAR(length=400),
                              autoincrement=False,
                              nullable=False),
                    sa.Column('departure',
                              postgresql.TIMESTAMP(),
                              autoincrement=False,
                              nullable=False),
                    sa.Column('arrival',
                              postgresql.TIMESTAMP(),
                              autoincrement=False,
                              nullable=False),
                    sa.Column('date',
                              sa.DATE(),
                              autoincrement=False,
                              nullable=False),
                    sa.ForeignKeyConstraint(
                        ['airplane_id'],
                        ['airplane.id'],
                        name='flight_airplane_id_fkey'),
                    sa.PrimaryKeyConstraint('id', name='pk_flight'))
    op.drop_table('tickets')
    op.drop_table('flights')
    op.drop_table('airplanes')
    # ### end Alembic commands ###
